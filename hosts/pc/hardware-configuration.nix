# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot = {
    initrd = {
      availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
      kernelModules = [ ];
    };
    kernelModules = [ "kvm-amd" "nvidia" "nvidia_drm" "hid_steam" "uinput" ];
    extraModulePackages = [ ];
    kernelParams = [ "usbcore.autosuspend=-1" ];
  };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/cea9fef9-e503-448a-b9f7-4894acf99196";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/5998-899D";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  fileSystems."/run/media/hadif/Storage" =
    { device = "/dev/disk/by-uuid/09a5bf2a-7538-46d9-9338-1e0edf3b31af";
      fsType = "btrfs";
    };

  fileSystems."/run/media/hadif/Storage2" =
    { device = "/dev/disk/by-uuid/15f21103-7508-6d40-6bf1-7d4016dd4057";
      fsType = "btrfs";
    };

  fileSystems."/run/media/hadif/Storage3" =
    { device = "/dev/disk/by-uuid/feb2407b-738b-4adc-a0b1-2838c896bfeb";
      fsType = "btrfs";
    };

  swapDevices = [{
    device = "/dev/disk/by-uuid/b4f061f1-0f78-4b9d-98c5-9935c9c54727"
  }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp10s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
